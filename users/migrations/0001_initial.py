# Generated by Django 4.2.22 on 2025-06-06 03:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_type', models.CharField(choices=[('COMMON', 'Common User'), ('COMPANY', 'Company'), ('STAFF', 'Staff'), ('ANALYST', 'Analyst'), ('ADMIN', 'Admin')], default='COMMON', help_text='Tipo de usuário (define comportamento e permissões).', max_length=20)),
                ('wallet_address', models.CharField(blank=True, help_text='Endereço da carteira blockchain do usuário.', max_length=42, null=True)),
                ('blocked_tokens', models.DecimalField(blank=True, decimal_places=2, help_text='Tokens bloqueados temporariamente (ex: em análise de saque).', max_digits=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CommonUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('full_name', models.CharField(help_text='Nome completo do usuário', max_length=255)),
                ('total_tokens_earned', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('completed_missions', models.IntegerField(default=0)),
                ('cpf', models.CharField(help_text='CPF do usuário (somente números)', max_length=14, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
    ]
