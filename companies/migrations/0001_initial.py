# Generated by Django 4.2.22 on 2025-06-07 00:14

import companies.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('commercial_name', models.CharField(help_text='Nome fantasia da empresa.', max_length=255)),
                ('legal_name', models.CharField(help_text='Razão social da empresa.', max_length=255)),
                ('business_area', models.CharField(blank=True, help_text='Área de atuação da empresa.', max_length=255)),
                ('cnpj', models.CharField(help_text='CNPJ da empresa (apenas números).', max_length=14, unique=True, validators=[companies.validators.validate_cnpj])),
                ('website', models.URLField(blank=True, help_text='URL do site oficial da empresa.')),
                ('logo_url', models.URLField(blank=True, help_text='URL da logo da empresa.')),
                ('verified', models.BooleanField(default=False, help_text='Indica se a empresa foi verificada pela plataforma.')),
                ('tokens_balance', models.DecimalField(decimal_places=2, default=0, help_text='Saldo de tokens disponível para ações internas da empresa (off-chain).', max_digits=20)),
                ('corporate_tax_id', models.CharField(blank=True, help_text='Inscrição estadual, municipal ou outro identificador fiscal.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['-created_at'],
            },
            bases=('users.user',),
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
    ]
